
---
interface FormField {
  id: string;
  name: string;
  type: "text" | "email" | "textarea" | "checkbox" | "radio" | "select";
  label: string;
  placeholder?: string | null;
  required: boolean;
  choices?: Array<{ label: string; value: string }> | null; // For select, radio, or checkbox fields
}

interface FormProps {
  id: string;
  sort: number | null;
  page: string;
  hide_block: boolean;
  background: string;
  item: {
    id: string;
    headline: string;
    tagline: string;
    form: {
      id: string;
      title: string;
      is_active: boolean;
      submit_label: string;
      on_success: "message" | "redirect";
      success_message: string;
      success_redirect_url?: string | null;
      fields: Array<FormField>;
    };
  };
}

const {
  background,
  item: { headline, tagline, form },
} = Astro.props as FormProps;

let formData: Record<string, string> = {};
let message = '';
let error = false;

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();

    if (!error) {
      message = form.success_message;
    }
  } catch (error: any) {
    console.error('Error submitting the form', error);
    error = true;
    message = error.message || 'Failed to create post';
  }
}

---

<section class={`form-section ${background}`}>
  <div class="form-header">
    <span class="tagline">{tagline}</span>
    <h2>{headline}</h2>
  </div>
  <form class="newsletter-form" method="post">
    {form.fields.map((field) => (
      <div class="form-field" >
        <label for={field.name}>
          {field.label}
          {field.required && <span class="required">*</span>}
        </label>
        {field.type === "text" || field.type === "email" ? (
          <input
            type={field.type}
            id={field.name}
            name={field.name}
            placeholder={field.placeholder || ""}
            required={field.required}
          />
        ) : field.type === "textarea" ? (
          <textarea
            id={field.name}
            name={field.name}
            placeholder={field.placeholder || ""}
            required={field.required}
          ></textarea>
        ) : field.type === "select" && field.choices ? (
          <select id={field.name} name={field.name} required={field.required}>
            {field.choices.map((choice) => (
              <option value={choice.value}>
                {choice.label}
              </option>
            ))}
          </select>
        ) : null}
      </div>
    ))}
    <button type="submit" class="submit-button">{form.submit_label}</button>
  </form>
  <div id="form-success-message" class="success-message hidden">
    {form.success_message}
  </div>
</section>


<style>
  .form-section {
    padding: 4rem 2rem;
    background-color: #ffffff;
    color: #333;
  }

  .form-section.dark {
    background-color: #333;
    color: #fff;
  }

  .form-header {
    text-align: center;
    margin-bottom: 2rem;
  }

  .tagline {
    display: block;
    font-size: 1rem;
    font-style: italic;
    color: #888;
    margin-bottom: 1rem;
  }

  h2 {
    font-size: 2rem;
    margin-bottom: 1rem;
  }

  .newsletter-form {
    max-width: 600px;
    margin: 0 auto;
  }

  .form-field {
    margin-bottom: 1.5rem;
  }

  .form-field label {
    display: block;
    font-size: 1rem;
    margin-bottom: 0.5rem;
  }

  .form-field .required {
    color: red;
    margin-left: 0.25rem;
  }

  .form-field input,
  .form-field textarea,
  .form-field select {
    width: 100%;
    padding: 0.75rem;
    font-size: 1rem;
    border: 1px solid #ccc;
    border-radius: 4px;
  }

  .form-field textarea {
    resize: vertical;
  }

  .submit-button {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
    font-weight: bold;
    color: #fff;
    background-color: #007bff;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .submit-button:hover {
    background-color: #0056b3;
  }

  .success-message {
    margin-top: 2rem;
    text-align: center;
    font-size: 1.25rem;
    color: #28a745;
  }

  .success-message.hidden {
    display: none;
  }
</style>